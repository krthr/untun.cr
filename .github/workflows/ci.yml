on: push

jobs:
  build:
    strategy:
      matrix:
        platform:
          - target: x86_64-apple-darwin
            os: macos-latest
            binary_name: untun-macos-x64
          - target: x86_64-linux-gnu
            os: ubuntu-latest
            binary_name: untun-linux-x64

    runs-on: ${{ matrix.platform.os }}

    permissions:
      contents: write

    steps:
      - name: Download source
        uses: actions/checkout@v5

      - name: Cache shards
        uses: actions/cache@v4
        with:
          path: |
            ./lib
            ~/.cache/shards
          key: shards-${{ matrix.platform.os }}-${{ hashFiles('shard.yml', 'shard.lock') }}
          restore-keys: |
            shards-${{ matrix.platform.os }}-${{ hashFiles('shard.yml') }}
            shards-${{ matrix.platform.os }}-

      - name: Install Crystal (Ubuntu)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          curl -fsSL https://crystal-lang.org/install.sh | sudo bash

      - name: Install Crystal (macOS)
        if: matrix.platform.os == 'macos-latest'
        run: |
          brew install crystal

      - name: Install shards
        run: shards check || shards install

      - name: Check formatting (Linux x64 only)
        if: matrix.platform.target == 'x86_64-linux-gnu'
        run: crystal tool format --check

      - name: Test
        run: crystal spec

      - name: Build
        run: |
          shards build --production --release --no-debug
          mv bin/untun bin/${{ matrix.platform.binary_name }}

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref_type == 'tag'
        with:
          files: |
            ./bin/${{ matrix.platform.binary_name }}
          make_latest: true
